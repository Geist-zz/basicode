1000 a=1000:GOTO 20:REM  towers of hanoi
1010 REM 
1020 GOSUB 100
1030 PRINT"THE TOWERS OF HANOI"
1040 PRINT"==================="
1050 PRINT:PRINT:PRINT"A BASICODE-2-PRODUCTION"
1060 PRINT:PRINT"BY THOMAS HOFMEISTER, GERMANY"
1070 PRINT:PRINT:PRINT"Do you want instructions (y/n)"
1080 GOSUB 200
1090 IF (in$="Y") OR (in$="y") THEN GOSUB 2060:GOTO 1120
1100 IF (in$="N") OR (in$="n") THEN 1120
1110 GOTO 1080
1120 GOSUB 100:PRINT"How many discs shall I move?"
1130 PRINT:PRINT"(at least one for a 40 character screen,"
1140 PRINT:PRINT"to a maximum of 12 for graphic option)"
1150 PRINT:PRINT:inputa5:IF a5<1 THEN 1120
1160 IF a5>255 THEN 1120
1170 GOSUB 100
1180 PRINT"Should I display the results"
1190 PRINT:PRINT"graphically ('G') or in words ('W')"
1200 GOSUB 200
1210 IF (in$="g") OR (in$="G") THEN g9=1:GOTO 1240
1220 IF (in$="w") OR (in$="W") THEN g9=0:GOTO 1240
1230 GOTO 1200
1240 REM  prepare three piles
1250 DIM h(3,a5),a1(3),sc$(a5)
1260 DIM vo(a5),na(a5),an(a5),ad(a5)
1270 IF g9=1 THEN GOSUB 1810
1280 IF g9=0 THEN GOSUB 100
1290 a1(1)=a5:a1(2)=0:a1(3)=0
1300 FOR i=1 TO a5:h(1,i)=a5+1-i:NEXT i
1310 REM  ****************************
1320 REM  begin of recursive procedure
1330 tf=0
1340 tf=tf+1
1350 vo(tf)=1:na(tf)=3:an(tf)=a5
1360 ad(tf)=1
1370 IF an(tf)<>1 THEN 1390
1380 vo=vo(tf):na=na(tf):GOSUB 1540:GOTO 1480
1390 tf=tf+1:vo(tf)=vo(tf-1)
1400 na(tf)=6-na(tf-1)-vo(tf-1)
1410 an(tf)=an(tf-1)-1
1420 ad(tf)=2:GOTO 1370
1430 vo=vo(tf):na=na(tf):GOSUB 1540
1440 tf=tf+1:vo(tf)=6-na(tf-1)-vo(tf-1)
1450 na(tf)=na(tf-1):an(tf)=an(tf-1)-1
1460 ad(tf)=3:GOTO 1370
1470 GOTO 1480
1480 REM  pseudo-RETURN
1490 tf=tf-1:z=ad(tf+1)
1500 ON z GOTO 2040,1430,1470
1510 STOP
1520 REM  ******************************
1530 REM  end of recursive procedure
1540 IF g9=0 THEN PRINT"from ";vo;" to ";na:RETURN
1550 a1(na)=a1(na)+1
1560 z=h(vo,a1(vo))
1570 h(na,a1(na))=z
1580 a1(vo)=a1(vo)-1
1590 REM  now the graphic part
1600 ho=(vo-1)*(a5+1)+1:ve=20-a1(vo)-1
1610 GOSUB 110
1620 h$=LEFT$(a2$,a5):PRINT h$;
1630 REM  move upwards
1640 FOR i=ve TO 20-a5-2 STEP -1:ve=i:GOSUB 110:PRINT sc$(z);
1650 GOSUB 2050
1660 GOSUB 110:PRINT h$;
1670 NEXT i
1680 REM  sideways movement
1690 v1=20-a1(na)
1700 h1=(na-1)*(a5+1)+1
1710 FOR i=ho TO h1 STEP (SGN(h1-ho)):ho=i
1720 GOSUB 110:PRINT sc$(z);
1730 GOSUB 2050
1740 GOSUB 110:PRINT h$;:NEXT i
1750 FOR i=ve TO v1-1:ve=i
1760 GOSUB 110:PRINT sc$(z);
1770 GOSUB 2050
1780 GOSUB 110:PRINT h$;:NEXT i
1790 ho=h1:ve=v1:GOSUB 110:PRINT sc$(z);
1800 RETURN
1810 REM  building blocks
1820 GOSUB 100
1830 ve=20:ho=0:GOSUB 110
1840 FOR k=1 TO 3
1850 PRINT"i";:FOR i=1 TO a5:PRINT"-";:NEXT i
1860 NEXT k:PRINT"i";
1870 FOR i=1 TO a5:ve=20-i
1880 ho=0:FOR l=1 TO 4
1890 GOSUB 110:PRINT"i";
1900 ho=ho+a5+1
1910 NEXT l:NEXT i
1920 REM  string variables for
1930 REM  display in word
1940 REM  
1950 a1$="***********************"
1960 a2$="                       "
1970 FOR i=1 TO a5:sc$(i)=""
1980 IF i=a5 THEN 2000
1990 sc$(i)=LEFT$(a2$,a5-i)
2000 sc$(i)=sc$(i)+LEFT$(a1$,i)
2010 NEXT i
2020 FOR i=1 TO a5
2030 ve=20-i:ho=1:GOSUB 110:PRINT sc$(a5+1-i);:NEXT i:RETURN
2040 GOTO 2440
2050 RETURN
2060 GOSUB 100
2070 PRINT"Towers of Hanoi is an ancient"
2080 PRINT:PRINT"problem which can be solved"
2090 PRINT:PRINT"easily by using recursion."
2100 PRINT:PRINT"You have three posts. On"
2110 PRINT:PRINT"the first is a pile of"
2120 PRINT:PRINT"discs, each one smaller"
2130 PRINT:PRINT"than the one below. The aim"
2140 PRINT:PRINT"is to move all discs "
2150 PRINT:PRINT"from post 1 to post 3, using"
2160 PRINT:PRINT"post 2 to help."
2170 GOSUB 2410
2180 PRINT:PRINT"You can move ONE disc "
2190 PRINT:PRINT"at a time, but you CANNOT"
2200 PRINT:PRINT"put a disc on top of"
2210 PRINT:PRINT"another disc that is smaller."
2220 PRINT:PRINT"The RECURSIVE solution "
2230 PRINT:PRINT"says that in order to"
2240 PRINT:PRINT"solve the problem for N"
2250 PRINT:PRINT"discs, you will have to move"
2260 GOSUB 2410
2270 PRINT:PRINT"N-1 discs from post 1 to post 2,"
2280 PRINT:PRINT"then move the last disc from post 1"
2290 PRINT:PRINT"to post 3, THEN  move N-1 discs"
2300 PRINT:PRINT"from post 2 to post 3."
2310 GOSUB 2410
2320 PRINT:PRINT"The author solved the "
2330 PRINT:PRINT"problem by using recursion"
2340 PRINT:PRINT"in BASIC without using "
2350 PRINT:PRINT"any GOSUB, which would "
2360 PRINT:PRINT"limit the number of the "
2370 PRINT:PRINT"discs, and it demonstrates"
2380 PRINT:PRINT"that anything can be done in BASIC!"
2390 GOSUB 2410
2400 RETURN
2410 ho=0:ve=20:GOSUB 110
2420 PRINT"Please press a key to continue";
2430 GOSUB 210:GOSUB 100:RETURN
2440 ho=15:ve=0:GOSUB 110
2450 PRINT"Please press a key";
2460 GOSUB 210
2470 GOSUB 100
2480 PRINT"Do you want to restart? (Y/N)"
2490 GOSUB 200
2500 IF (in$="y") OR (in$="Y") THEN run
2510 IF (in$="n") OR (in$="N") THEN 2530
2520 GOTO 2490
2530 GOSUB 100
2540 PRINT"******************************"
2550 PRINT"*                            *"
2560 PRINT"*   THOMAS HOFMEISTER        *"
2570 PRINT"*                            *"
2580 PRINT"*   WITTENBERGSTR. 25        *"
2590 PRINT"*                            *"
2600 PRINT"*   4630 BOCHUM 7            *"
2610 PRINT"*                            *"
2620 PRINT"*   WEST-GERMANY             *"
2630 PRINT"*                            *"
2640 PRINT"******************************"
30000 REM  program was written on
30010 REM  a commodore-64 in
30020 REM  october 83 and adapted for
30030 REM  basicode-2 on the same day.
30040 REM 
30050 REM  translated
30060 REM  by jonathan marks
