1000 a=500:GOTO 20:REM basicode-3 journal 4
1010 ht=ho:vt=ve:s$="":FOR i=1 TO ht:s$=s$+" ":NEXT i
1020 hl=0:hr=ht:vl=2:vr=vt-2:r$="":READ t$
1030 GOSUB 1410:ho=(ht-LEN(sr$)-6)/2:ve=0:GOSUB 110
1040 GOSUB 150:PRINT:PRINT:PRINT
1050 PRINT"Ausdruck ueber"
1060 PRINT:PRINT"   1  den Bildschirm,"
1070 PRINT"   2  den Drucker"
1080 PRINT:PRINT"Welche Nummer ?";:GOSUB 210
1090 sc=in-48:PRINT sc:IF sc<>2 THEN sc=1:GOTO 1220
1100 PRINT:PRINT"Wieviel Leerzeichen"
1110 INPUT"am Zeilenanfang    ";hl
1120 PRINT:PRINT"Wieviel Text-Zeichen"
1130 INPUT"auf jeder Zeile    ";i:hr=hl+i-1
1140 PRINT:PRINT"Wieviel Text-Zeilen"
1150 INPUT"auf jeder Seite    ";vr:vr=vr-3
1160 PRINT"(E) Endlospapier oder  "
1170 PRINT"(L) Lose Blaetter (E/L) ";
1180 GOSUB 210:IF in=76 THEN vl=-1:GOTO 1220
1190 IF in<>69 THEN GOSUB 250:GOTO 1160
1200 PRINT:PRINT"Wieviel Leerzeilen"
1210 INPUT"am Seitenende      ";vl:vr=vr+vl
1220 mm$="":IF hl>0 THEN mm$=LEFT$(s$,hl)
1230 GOSUB 1380:m$=mm$:al=vl:IF sc=2 THEN GOSUB 1360
1240 IF LEN(r$)>hr-hl THEN GOSUB 1820
1250 GOSUB 1440:IF r$<>"" THEN r$=r$+" "
1260 r$=r$+d$:GOTO 1240
1270 IF sc=2 THEN sr$=m$+sr$:GOSUB 350:GOSUB 360:GOTO 1290
1280 GOSUB 120:PRINT m$;sr$;:ve=ve+1:ho=0:GOSUB 110:hl=0
1290 m$=mm$:al=al+1:IF al<=vr THEN RETURN
1300 IF sc=1 THEN 1380
1310 IF vl>=0 THEN FOR i=1 TO vl:GOSUB 360:NEXT i:GOTO 1350
1320 PRINT"Neues Blatt in Drucker einlegen"
1330 PRINT"druecke dann       RETURN/ENTER"
1340 GOSUB 210:IF in<>13 THEN 1340
1350 al=vl
1360 sr$=LEFT$(s$,(hr-hl-LEN(t$))/2)+t$:GOSUB 1270
1370 sr$="":GOSUB 1270:al=vl:RETURN
1380 ho=3:ve=vt:GOSUB 110
1390 sr$="Weiter: druecke <RETURN/ENTER>":GOSUB 150
1400 GOSUB 210:IF in<>13 THEN 1400
1410 GOSUB 100:al=vl:sr$=t$
1420 PRINT LEFT$(s$,(ht-LEN(sr$))/2-3);:GOSUB 150
1430 PRINT:PRINT:RETURN
1440 READ d$
1450 IF d$="" THEN 1440
1460 IF LEFT$(d$,1)="." THEN 1530
1470 IF LEFT$(d$,1)<>">" THEN 1490
1480 d$=LEFT$(s$,23-LEN(r$))+mid$(d$,2):RETURN
1490 IF LEFT$(d$,1)<>"!" THEN RETURN
1500 IF d$="!" THEN d$="":GOTO 1520
1510 d$=mid$(d$,2)
1520 GOSUB 1760:GOTO 1450
1530 IF d$<>".E" THEN 1580
1540 j=1:GOSUB 1760:t$="E N D E"
1550 sr$="":GOSUB 1270:GOSUB 1270:sr$=t$:GOSUB 1270:t$=""
1560 sr$="":GOSUB 1270:IF al<>vl THEN 1560
1570 GOTO 950
1580 dd$=mid$(d$,2,1):d$=mid$(d$,3)
1590 IF dd$<>"R" THEN 1640
1600 IF sc=2 THEN RETURN
1610 IF LEN(r$)+6+LEN(d$)>=hr-hl THEN sr$=r$:GOSUB 1270:r$=""
1620 PRINT m$;r$;:sr$=d$:GOSUB 150:m$=""
1630 hl=hl+LEN(r$)+LEN(d$)+6:r$="":GOTO 1440
1640 IF dd$<>"M" THEN 1670
1650 i=VAL(d$):mm$="":IF i+hl=0 THEN 1440
1660 mm$=LEFT$(s$,i+hl):GOTO 1440
1670 IF dd$="P" THEN j=VAL(d$):GOSUB 1760:GOSUB 1780:GOTO 1440
1680 IF dd$="T" THEN t$=d$:j=10:GOSUB 1760:GOSUB 1780:GOTO 1600
1690 IF dd$="Q" THEN r$=r$+CHR$(34)+d$:GOTO 1440
1700 IF dd$<>"F" THEN 1730
1710 j=VAL(d$):GOSUB 1760
1720 j=j-1:IF j>-1 THEN sr$="":GOSUB 1270:GOTO 1720
1730 IF dd$<>"C" THEN 1750
1740 sr$=LEFT$(s$,(hr-hl-LEN(d$))/2)+d$:GOSUB 1270
1750 GOTO 1440
1760 GOSUB 1820:sr$=r$:GOSUB 1270:r$="":j=j-1
1770 RETURN
1780 IF (sc=1) OR (al+j>vr) THEN 1800
1790 sr$="":GOSUB 1270:GOSUB 1270:RETURN
1800 IF al<>vl THEN sr$="":GOSUB 1270:GOTO 1800
1810 RETURN
1820 k=hr-hl+1-LEN(m$)
1830 IF LEN(r$)<=k THEN RETURN
1840 IF mid$(r$,k,1)=" " THEN 1870
1850 k=k-1:IF k>0 THEN 1840
1860 sr$="":GOTO 1880
1870 sr$=LEFT$(r$,k-1):r$=mid$(r$,k+1)
1880 GOSUB 1270:GOTO 1820
1890 REM
1900 REM uebersetzte version
1910 REM
1920 REM computer-bulletin no.32 (07/89)
1930 REM stichting basicode, eindhoven
1940 REM
25000 DATA "Progr. in BASICODE (3)"
25010 DATA 
25020 DATA ".RFunktionen"
25030 DATA "!!Funktionen geben in Abhaengigkeit von ein,"
25040 DATA "zwei oder drei Argumenten einen Wert zurueck,"
25050 DATA "der einer Variablen zugewiesen oder ausgegeben"
25060 DATA "werden kann oder Teil eines Ausdrucks wird."
25070 DATA "Bei der Verwendung von Funktionen in"
25080 DATA "BASICODE-Programmen existieren bestimmte"
25090 DATA "Beschraenkungen. Unterschieden werden"
25100 DATA "!! - numerische Funktionen,"
25110 DATA "! - Zeichenkettenfunktionen und"
25120 DATA "! - Hybridfunktionen (Typwandlung)."
25130 DATA ".P0","Numerische Funktionen"
25140 DATA "!!Die Standard-Funktionen"
25150 DATA "!! - ABS, INT, SGN, EXP, SQR,"
25160 DATA "!   COS, SIN, TAN, ATN"
25170 DATA "!!koennen wie ueblich verwendet werden."
25180 DATA "!!LOG(argument) gibt den natuerlichen"
25190 DATA "Logarithmus zur Basis e (= 2.718...) zurueck."
25200 DATA "!Einzelne BASIC-Dialekte geben ueber LOG als"
25210 DATA "Wert der Funktion den Logarithmus zur Basis 10."
25220 DATA "Es wird zwischen LOG und LN unterschieden."
25230 DATA "Der Bascoder gleicht dies aus."
25240 DATA "!!Fuer die Winkelfunktionen ist das Argument im"
25250 DATA "Bogenmass anzugeben.",".P0"
25260 DATA "Die numerischen Funktionen"
25270 DATA "!! - MEM oder"
25280 DATA "! - FRE(parameter)"
25290 DATA "!!zur Angabe des freien Speicherplatzes duerfen"
25300 DATA "in BASICODE nicht verwendet werden. Dazu dient"
25310 DATA "allein die Subroutine # 270 mit gleichzeitiger"
25320 DATA "'garbage collection' und die Abfrage des Wertes"
25330 DATA "der Variablen FR."
25340 DATA "!!Die Bildung von Pseudozufallszahlen geschieht"
25350 DATA "in BASICODE-Programmen allein ueber die"
25360 DATA "Subroutine # 260 und die Variable RV."
25370 DATA "Funktionsaufrufe oder Kommandos wie:"
25380 DATA "!! - RND(parameter),"
25390 DATA "! - RANDOMIZE, RAND"
25400 DATA "!!sind nicht zugelassen."
25410 DATA ".P0"
25420 DATA "Neben den eingebauten Standardfunktionen"
25430 DATA "koennen auch vom Benutzer definierte Funktionen"
25440 DATA "nach ihrer Definition mit DEF FNname verwendet"
25450 DATA "werden (vergl. Teil 4, Vereinbarungen)."
25460 DATA ".P0"
25470 DATA "Zeichenkettenfunktionen"
25480 DATA "!!Sie geben als Wert eine Stringkonstante"
25490 DATA "zurueck; dazu gehoeren:"
25500 DATA "!! - LEFT$(A$, M),  )"
25510 DATA "! - RIGHT$(A$, M), ( vergleich"
25520 DATA "! - MID$(A$, M, N) ( 'stringfunkt.'"
25530 DATA "!   und            )"
25540 DATA "! - MID$(A$, N).   )"
25550 DATA "!Der numerische Ausdruck (M, N) kann einen Wert"
25560 DATA "von 1 ... 255 annehmen; der Wert '0' fuehrt zu"
25570 DATA "einer Fehlermeldung."
25580 DATA "!!Zeichenkettenfunktionen durch den Benutzer"
25590 DATA "zu definieren, ist in BASICODE-Programmen nicht"
25600 DATA "moeglich.",".P0"
25610 DATA "Hybridfunktionen"
25620 DATA "!!Damit sollen hier Funktionen bezeichnet"
25630 DATA "werden, die einen numerischen in einen"
25640 DATA "alphanumerischen Wert und umgekehrt umwandeln."
25650 DATA "Diese Funktionen koennen auch in Ausdruecken"
25660 DATA "des entsprechenden Typs verwendet werden."
25670 DATA "!!In BASICODE-Programmen sind erlaubt:"
25680 DATA "!! - LEN(A$)   gibt die Laenge der"
25690 DATA "!             Zeichenkette (Zeichenzahl)"
25700 DATA "!             zurueck."
25710 DATA "!! - ASC(A$)   ergibt eine Zahl gleich"
25720 DATA "!             dem ASCII-Wert des ersten"
25730 DATA "!             Zeichens von A$.",".P0"
25740 DATA 
25750 DATA " - CHR$(A)   das Zeichen, entsprechend"
25760 DATA "!             dem ASCII-Wert von A wird"
25770 DATA "!             angezeigt."
25780 DATA 
25790 DATA "!!Bei der Verwendung der Funktionen ASC und CHR$"
25800 DATA "(der Umkehrfunktion von ASC) ist Vorsicht"
25810 DATA "geboten, da manche Computer den Zeichensatz"
25820 DATA "abweichend vom ASCII kodieren (z.B. C64)."
25830 DATA ".P0"
25840 DATA "Die in BASIC-Dialekten ueblichen FunktKonen"
25850 DATA "VAL(A$) und STR$(A) fuehren eine Typwandlung"
25860 DATA "aus, d.h. es werden Zeichenketten mit ihrem"
25870 DATA "numerischen Wert und numerische Werte als"
25880 DATA "Zeichenketten dargestellt."
25890 DATA "!!Da die VAL(A$)-Funktion in unterschiedlichen"
25900 DATA "Dialekten unterschiedliche Wirkungen hat, ist"
25910 DATA "sicherzustellen, das A$ rein numerisch ist."
25920 DATA "!!Die Funktion STR$(A) ist in BASICODE verboten;"
25930 DATA "an ihrer Stelle ist die Subroutine # 300 mit den"
25940 DATA "Variablen SR Dzw. SR$ aufzurufen."
25950 DATA ".P0"
25960 DATA ".RLogische Ausdruecke"
25970 DATA "!!Die Bildung logischer Werte ('wahr' oder"
25980 DATA "'falsch') geschieht bei verschiedenen Computern"
25990 DATA "unterschiedlich. So wird 'wahr' durch '+1' oder"
26000 DATA "'-1' dargestellt, 'falsch' meistens durch '0'."
26010 DATA "!Um die Portabilitaet der Programme zu sichern,"
26020 DATA "gelten fuer BASICODE-Programme hinsichtlich der"
26030 DATA "Anwendung einige Begrenzungen:"
26040 DATA "!! - Logische Werte duerfen nicht Teil"
26050 DATA "!   arithmetischer Operationen sein,"
26060 DATA "!!   z.B. A=3*(C=B),",".P0"
26070 DATA " - Vergleiche, die 'wahr' oder 'falsch'"
26080 DATA "!   ergeben, sind in Klammern zu setzen,"
26090 DATA "!   um die Abarbeitungsfolge"
26100 DATA "!   zu gewaehrleisten:"
26110 DATA "!!   richtig: A=(B=C)"
26120 DATA "!   falsch:  A=B=C"
26130 DATA "!! - Die logischen Operatoren AND und OR"
26140 DATA "!   duerfen in BASICODE nicht zur"
26150 DATA "!   bitweisen Verknuepfung von Zahlen,"
26160 DATA "!   z.B. A=5 AND 7"
26170 DATA "!   verwendet werden."
26180 DATA ".P0"
26190 DATA "Es gilt, dass logische Ausdruecke"
26200 DATA "nur in der Form"
26210 DATA "!! IF logischer ausdruck THEN anweisung,"
26220 DATA "! IF logischer ausdruck THEN zeilennr."
26230 DATA "!!verwendet werden duerfen (vergl. Teil 5)."
26240 DATA ".P10","Das war das","!!"
26250 DATA ".C**************************"
26260 DATA ".C*                        *"
26270 DATA ".C*  BASICODE-3   Journal  *"
26280 DATA ".C*        Nummer 4        *"
26290 DATA ".C*     21. Maerz  1990    *"
26300 DATA ".C*                        *"
26310 DATA ".C**************************",".E"
30000 REM
30010 REM grundlagen von basicode
30020 REM       -- teil 3 --
32000 
32040 REM
32050 REM 12/1989 - c64/c128
32060 REM --------------------
32070 REM
32080 REM erstausstrahlung: radio ddr
32090 REM 900321
